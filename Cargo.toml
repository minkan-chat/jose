[package]
name = "jose"
version = "0.0.1"
edition = "2021"
license = "MIT OR Apache-2.0"
rust-version = "1.84"
authors = [
  "Erik Tesar <erik@erik-tesar.com>",
  "Justus K. <justus.k@protonmail.com>",
]
description = "A JSON Object Signing and Encryption implementation"
readme = "README.md"
homepage = "https://github.com/minkan-chat/jose"
repository = "https://github.com/minkan-chat/jose.git"
keywords = ["jwt", "JsonWebToken", "json", "jose", "authentication"]
categories = [
  "cryptography",
  "encoding",
  "parser-implementations",
  "no-std",
  "authentication",
]

[features]
default = []
std = [
  "thiserror/std",
  "fluent-uri/std",
  "serde_json/std",
  "elliptic-curve?/std",
  "signature?/std",
  "rsa?/std",
  "rand_core?/std",
]
crypto-rustcrypto = [
    "dep:rand_core",
    "dep:hmac",
    "dep:sha2",
    "dep:p256",
    "dep:p384",
    "dep:k256",
    "dep:elliptic-curve",
    "dep:rsa",
    "dep:digest",
    "dep:ecdsa",
    "dep:ed25519-dalek",
    "dep:generic-array",
    "dep:signature",
]
crypto-openssl = ["std", "dep:openssl"]
crypto-openssl-vendored = ["crypto-openssl", "openssl/vendored"]
crypto-aws-lc = ["std", "dep:openssl", "openssl/aws-lc"]

# This feature enables the deterministic signature generation
# using EcDSA according to RFC 6979
deterministic-ecdsa = []

[dependencies]
base64ct = { version = "1.5", default-features = false, features = ["alloc"] }
serde = { version = "1", default-features = false, features = [
  "alloc",
  "derive",
] }
serde_json = { version = "1", default-features = false, features = ["alloc"] }
hashbrown = { version = "0.15", features = ["serde"] }

serde-value = { version = "0.7.0", default-features = false }
# a replacement for the `mime` crate from hyper which seems to be no longer maintained
mediatype = { version = "0.19.3", features = ["serde"] }
fluent-uri = { version = "0.3.2", default-features = false }
secrecy = { version = "0.10.3", default-features = false, features = ["serde"] }
zeroize = { version = "1.8.1", default-features = false, features = ["derive", "serde"] }
subtle = "2.6.1"
thiserror = { version = "2.0.12", default-features = false }
cfg-if = "1.0.0"

# RustCrypto backend
rand_core = { optional = true, version = "0.6", features = ["getrandom", "alloc"] }
hmac = { optional = true, version = "0.12", default-features = false }
sha2 = { optional = true, version = "0.10", default-features = false, features = ["oid"] }
p256 = { optional = true, version = "0.13", default-features = false, features = [
  "arithmetic",
  "ecdsa",
] }
p384 = { optional = true, version = "0.13", default-features = false, features = [
  "arithmetic",
  "ecdsa",
] }
k256 = { optional = true, version = "0.13", default-features = false, features = [
  "arithmetic",
  "ecdsa",
] }
elliptic-curve = { optional = true, version = "0.13", default-features = false, features = [
  "arithmetic",
  "jwk",
  "serde",
  "sec1",
  "pkcs8",
  "pem",
] }
rsa = { optional = true, version = "0.9", default-features = false }
digest = { optional = true, version = "0.10.7", default-features = false, features = ["mac"] }
ecdsa = { optional = true, version = "0.16", default-features = false, features = [
  "digest",
  "signing",
  "verifying",
  "alloc",
] }
ed25519-dalek = { optional = true, version = "2", default-features = false, features = [
  "zeroize",
  "rand_core",
] }
# FIXME: remove this when we can use const generics
generic-array = { optional = true, version = "0.14", default-features = false, features = [
  "serde",
] }
signature = { optional = true, version = "2.1.0", default-features = false }

# OpenSSL backend (is also used for aws-lc and libressl)
openssl = { version = "0.10.72", optional = true }

[dev-dependencies]
# For examples
eyre = "0.6.12"
clap = { version = "4.5.27", features = ["derive"] }
clio = { version = "0.3.5", features = ["clap-parse"] }

# For X.509 certificates of Json Web Keys
# x509-cert = { git = "https://github.com/RustCrypto/formats.git" }

[[example]]
name = "basic-jwt"
required-features = ["std"]

[package.metadata.docs.rs]
features = ["crypto-rustcrypto", "std", "deterministic-ecdsa"]
rustdoc-args = ["--cfg", "docsrs"]
